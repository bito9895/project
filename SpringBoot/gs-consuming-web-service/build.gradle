plugins {
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
	}
}

task genJaxb {
	ext.sourcesDir = "src/main/java"
	ext.schema = "src/main/resources/countries.xsd"

	outputs.dir sourcesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)

			xjc(destdir: sourcesDir, schema: schema) {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
			}
		}
	}
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava.dependsOn genJaxb

configurations {
	jaxb
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-activemq'
	implementation 'wsdl4j:wsdl4j'
	
	implementation 'org.springframework.ws:spring-ws-core'
	implementation 'org.glassfish.jaxb:jaxb-runtime'

	implementation 'javax.xml.soap:saaj-api:1.3.5'
	implementation 'com.sun.xml.messaging.saaj:saaj-impl:1.5.2'

	jaxb("org.glassfish.jaxb:jaxb-xjc")
	testImplementation('org.springframework.boot:spring-boot-starter-test')

	//implementation 'org.springframework.ws:spring-ws-core'
	//implementation 'org.glassfish.jaxb:jaxb-runtime'
}

test {
	useJUnitPlatform()
}

bootJar {
	baseName = 'gs-consuming-web-service'
	version =  '0.1.0'
}
